generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(uuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String         @id @unique @default(uuid())
  userName           String?
  visibleName    String?        @unique
  email          String         @unique
  emailVerified  DateTime?
  image          String?
  currentPersona Int?
  userPersonas   UserPersonas[]
  accounts       Account[]
  sessions       Session[]
}

model UserPersonas {
  id         String   @id @unique @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  persona    Persona  @relation(fields: [personaId], references: [id])
  personaId  String
  assignedAt DateTime @default(now())
  assignedBy String
}

model Persona {
  id              String         @id @unique @default(uuid())
  personaName     String    
  image           String?
  currentPlaylist String
  themeId       String
  theme           Theme          @relation(fields: [themeId], references: [id])
  users           UserPersonas[]
  ownerUserId         String
}

model Theme {
  id              String         @id @unique @default(uuid())
  themeName             String    @unique
  ownerUserId          String
  personas         Persona[]
  //Primary Colors
  primaryColor     String @default("#a991f7")
  primaryFocus     String? 
  primaryContent   String? 
  //Secondary Colors
  secondaryColor   String @default("#f6d860")
  secondaryFocus   String? 
  secondaryContent String? 
  //Accent Colors
  accentColor      String @default("#37cdbe")
  accentFocus      String?
  accentContent    String?
  //System Colors
  neutralColor     String?
  neutralFocus     String?
  neutralContent   String?
  base100Color     String?
  baseContent      String?
  infoColor        String?
  infoContent      String?
  successColor     String?
  successContent   String?
  warningColor     String?
  warningContent   String?
  errorColor       String?
  errorContent     String?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
